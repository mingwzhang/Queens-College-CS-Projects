This project started with creating the Member class, which is used to store member details like first name, last name, ID, age, and whether they live in New York. This class was important for organizing and keeping track of members in the program. After that, the Membership class was developed as the main class. It handled reading, creating, and writing text files, as well as managing a hashtable where each member’s ID was the key. This made it easy to look up members and make sure no duplicate IDs were added.

To test if the hashtable was correctly reading the input file, I first ran the program directly in the IDE. This confirmed that file handling was set up properly, but since the program was designed for command-line input, full testing required running it in cmd. For example, using a command like java Membership -firstname=Steve -lastname=Smith -id=1234567890 -age=23 -NewYork=false -outputFile=NameOfOutputFile -inputFile=InitialDataFile wouldn’t work properly in the IDE. However, it did confirm that the file-reading functions were working. The program processes command-line arguments by reading them as a string and splitting them based on specific prefixes like -firstname= or -id=. Since everything is parsed in a loop, the order of the arguments doesn’t matter, which makes the program more flexible.

Even though most of the functionality worked, there were still some issues. One issue is that the output file does not maintain the same order as the input file, which happens because the hashtable does not preserve insertion order, which could make it harder to track changes. Another problem is while the idea of storing data in an SQL database was introduced, the actual functionality was not implemented, meaning that all data is lost when the program stops running. Implementing database persistence would be a key improvement.